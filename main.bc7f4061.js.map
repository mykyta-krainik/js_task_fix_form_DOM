{"version":3,"sources":["scripts/main.js"],"names":["fixForm","form","inputs","querySelectorAll","input","addLabel","addPlaceholder","separatedLabel","separateWords","name","insertAdjacentHTML","id","placeholder","toUpperCase","slice","words","split","map","letter","toLowerCase","join","forms","document"],"mappings":";AAAA,aA0CC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxCD,SAASA,EAAQC,GACTC,IADe,EAGDA,EAAAA,EAFLD,EAAKE,iBAAiB,UADhB,IAGO,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBC,IAAAA,EAAiB,EAAA,MAC1BC,EAASD,GACTE,EAAeF,IALI,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KASvB,SAASC,EAASD,GACVG,IAAAA,EAAiBC,EAAcJ,EAAMK,MAE3CL,EAAMM,mBAAmB,cACVN,oBAAAA,OAAAA,EAAMO,GACfJ,iCAAAA,OAAAA,EAFN,uBAOF,SAASD,EAAeF,GAChBQ,IAAAA,EAAcJ,EAAcJ,EAAMK,MAExCL,EAAMQ,YAAcA,EAAY,GAAGC,cAAgBD,EAAYE,MAAM,GAGvE,SAASN,EAAcO,GACdA,OAAAA,EACJC,MAAM,IACNC,IAAI,SAAAC,GACIA,OAAAA,IAAWA,EAAOL,cACrB,IAAMK,EAAOC,cACbD,IAELE,KAAK,IAGV,IAIC,EAJKC,EAAQC,SAASnB,iBAAiB,QAErBkB,EAAAA,EAAAA,GAElB,IAFyB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfpB,IAAAA,EAAe,EAAA,MACxBD,EAAQC,IACT,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.bc7f4061.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction fixForm(form) {\n  const inputs = form.querySelectorAll('input');\n\n  for (const input of inputs) {\n    addLabel(input);\n    addPlaceholder(input);\n  }\n}\n\nfunction addLabel(input) {\n  const separatedLabel = separateWords(input.name);\n\n  input.insertAdjacentHTML('beforebegin', `\n    <label for=${input.id} class='field-label'>\n      ${separatedLabel}\n    </label>\n  `);\n}\n\nfunction addPlaceholder(input) {\n  const placeholder = separateWords(input.name);\n\n  input.placeholder = placeholder[0].toUpperCase() + placeholder.slice(1);\n}\n\nfunction separateWords(words) {\n  return words\n    .split('')\n    .map(letter => {\n      return letter === letter.toUpperCase()\n        ? ' ' + letter.toLowerCase()\n        : letter;\n    })\n    .join('');\n}\n\nconst forms = document.querySelectorAll('form');\n\nfor (const form of forms) {\n  fixForm(form);\n}\n"]}